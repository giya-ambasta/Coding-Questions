q1 

Write a Python program that takes multiple pairs of integers as input and performs integer division (a // b). Handle exceptions for division by zero (ZeroDivisionError) and invalid input values (ValueError). For each pair of integers, the program should print the result of the division or an error message if an exception occurs.

Input format :
The first line of input contains an integer t, where t represents the number of pairs of integers to process.

Each of the next t lines contains two space-separated integers, a and b, where a is the numerator and b is the denominator for integer division.

Output format :
For each pair of integers:

If division by zero occurs (ZeroDivisionError), print "division by zero".
If the input values cannot be converted to integers (ValueError), print "invalid literal for int() with base 10".
Otherwise, print the result of the integer division a // b.


Each output should be printed on a new line.



Refer to the sample output for formatting specifications.

Code constraints :
1 ≤ t ≤ 10

Sample test cases :
Input 1 :
3
4 2
6 3
10 3
Output 1 :
2
2
3
Input 2 :
3
10 2
5 0
2.5 2
Output 2 :
5
integer division or modulo by zero
invalid literal for int() with base 10: '2.5'


q2

Seetha wants to understand the process of exception handling. She wants to print the variable x which was not assigned any value. But she needs to print the error message 'An exception occurred' instead of getting an error 'variable x not declared'.



Help her in this process.

Output format :
Displays the error message 'An exception occurred'.

Sample test cases :
Input 1 :
Output 1 :
An exception occurred

q3
Write a Python program that takes user input, attempts to convert it to an integer (int), and prints "Valid Integer" if successful. If the input cannot be converted to an integer (ValueError), the program should catch the exception and print "Invalid Integer".

Input format :
The input consists of a value.

Output format :
The program will output one of two possible messages:

"Valid Integer" if the input can be successfully converted to an integer.
"Invalid Integer" if the input cannot be converted to an integer (ValueError).
Sample test cases :
Input 1 :
5
Output 1 :
Valid Integer
Input 2 :
5.5
Output 2 :
Invalid Integer